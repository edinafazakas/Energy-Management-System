{"ast":null,"code":"var minLengthValidator = function minLengthValidator(value, minLength) {\n  return value.length >= minLength;\n};\nvar requiredValidator = function requiredValidator(value) {\n  return value.trim() !== '';\n};\nvar emailValidator = function emailValidator(value) {\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(value).toLowerCase());\n};\nvar validate = function validate(value, rules) {\n  var isValid = true;\n  for (var rule in rules) {\n    switch (rule) {\n      case 'minLength':\n        isValid = isValid && minLengthValidator(value, rules[rule]);\n        break;\n      case 'isRequired':\n        isValid = isValid && requiredValidator(value);\n        break;\n      case 'emailValidator':\n        isValid = isValid && emailValidator(value);\n        break;\n      default:\n        isValid = true;\n    }\n  }\n  return isValid;\n};\nexport default validate;","map":{"version":3,"names":["minLengthValidator","value","minLength","length","requiredValidator","trim","emailValidator","re","test","String","toLowerCase","validate","rules","isValid","rule"],"sources":["D:/MATERIALE AN 4 SEM 1/SD/proiect/ds2023_30642_fazakas_edina_assignment_1/react-demo/src/person/components/validators/person-validators.js"],"sourcesContent":["\r\nconst minLengthValidator = (value, minLength) => {\r\n    return value.length >= minLength;\r\n};\r\n\r\nconst requiredValidator = value => {\r\n    return value.trim() !== '';\r\n};\r\n\r\nconst emailValidator = value => {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(value).toLowerCase());\r\n};\r\n\r\nconst validate = (value, rules) => {\r\n    let isValid = true;\r\n\r\n    for (let rule in rules) {\r\n\r\n        switch (rule) {\r\n            case 'minLength': isValid = isValid && minLengthValidator(value, rules[rule]);\r\n                              break;\r\n\r\n            case 'isRequired': isValid = isValid && requiredValidator(value);\r\n                               break;\r\n\r\n            case 'emailValidator': isValid = isValid && emailValidator(value);\r\n                                   break;\r\n\r\n            default: isValid = true;\r\n        }\r\n\r\n    }\r\n\r\n    return isValid;\r\n};\r\n\r\nexport default validate;\r\n"],"mappings":"AACA,IAAMA,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIC,KAAK,EAAEC,SAAS,EAAK;EAC7C,OAAOD,KAAK,CAACE,MAAM,IAAID,SAAS;AACpC,CAAC;AAED,IAAME,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAGH,KAAK,EAAI;EAC/B,OAAOA,KAAK,CAACI,IAAI,CAAC,CAAC,KAAK,EAAE;AAC9B,CAAC;AAED,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAGL,KAAK,EAAI;EAC5B,IAAMM,EAAE,GAAG,qJAAqJ;EAChK,OAAOA,EAAE,CAACC,IAAI,CAACC,MAAM,CAACR,KAAK,CAAC,CAACS,WAAW,CAAC,CAAC,CAAC;AAC/C,CAAC;AAED,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAIV,KAAK,EAAEW,KAAK,EAAK;EAC/B,IAAIC,OAAO,GAAG,IAAI;EAElB,KAAK,IAAIC,IAAI,IAAIF,KAAK,EAAE;IAEpB,QAAQE,IAAI;MACR,KAAK,WAAW;QAAED,OAAO,GAAGA,OAAO,IAAIb,kBAAkB,CAACC,KAAK,EAAEW,KAAK,CAACE,IAAI,CAAC,CAAC;QAC3D;MAElB,KAAK,YAAY;QAAED,OAAO,GAAGA,OAAO,IAAIT,iBAAiB,CAACH,KAAK,CAAC;QAC7C;MAEnB,KAAK,gBAAgB;QAAEY,OAAO,GAAGA,OAAO,IAAIP,cAAc,CAACL,KAAK,CAAC;QAC1C;MAEvB;QAASY,OAAO,GAAG,IAAI;IAC3B;EAEJ;EAEA,OAAOA,OAAO;AAClB,CAAC;AAED,eAAeF,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}