{"ast":null,"code":"import { HOST } from '../../commons/hosts';\nimport RestApiClient from \"../../commons/api/rest-client\";\nvar endpoint = {\n  device: '/getDevices',\n  deleteDevice: '/deleteDevice',\n  createDevice: '/createDevice',\n  editDevice: '/updateDevice'\n};\nfunction getDevices(token) {\n  return new Promise(function (resolve, reject) {\n    var request = new Request(HOST.backend_devices + endpoint.device, {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + token // Include the token in the Authorization header\n      }\n    });\n\n    RestApiClient.performRequest(request).then(function (response) {\n      return response.json();\n    }).then(function (result) {\n      return resolve(result);\n    }).catch(function (error) {\n      return reject(error);\n    });\n  });\n}\nfunction getDeviceById(params, callback) {\n  var token = sessionStorage.getItem('token');\n  var request = new Request(HOST.backend_devices + endpoint.device + params.id, {\n    method: 'GET',\n    headers: {\n      'Authorization': \"Bearer \".concat(token)\n    }\n  });\n  RestApiClient.performRequest(request, callback);\n}\nfunction postDevice(user, callback) {\n  var token = sessionStorage.getItem('token');\n  var request = new Request(HOST.backend_devices + endpoint.createDevice, {\n    method: 'POST',\n    headers: {\n      'Authorization': \"Bearer \".concat(token),\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  });\n  RestApiClient.performRequest(request, callback);\n}\nfunction deleteDevice(id, token, callback) {\n  var request = new Request(HOST.backend_devices + endpoint.deleteDevice + '/' + id, {\n    method: 'DELETE',\n    headers: {\n      'Authorization': \"Bearer \".concat(token)\n    }\n  });\n  console.log(\"URL: \" + request.url);\n  RestApiClient.performRequest(request, callback);\n}\nfunction editDevice(id, device, token, callback) {\n  var request = new Request(HOST.backend_devices + endpoint.editDevice + \"/\" + id, {\n    method: 'PATCH',\n    headers: {\n      'Authorization': \"Bearer \".concat(token),\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(device)\n  });\n  RestApiClient.performRequest(request, callback);\n}\nexport { getDevices, getDeviceById, postDevice, deleteDevice, editDevice };","map":{"version":3,"names":["HOST","RestApiClient","endpoint","device","deleteDevice","createDevice","editDevice","getDevices","token","Promise","resolve","reject","request","Request","backend_devices","method","headers","performRequest","then","response","json","result","catch","error","getDeviceById","params","callback","sessionStorage","getItem","id","concat","postDevice","user","body","JSON","stringify","console","log","url"],"sources":["D:/MATERIALE AN 4 SEM 1/SD/proiect/ds2023_30642_fazakas_edina_assignment_1/react-demo/src/device/api/device-api.js"],"sourcesContent":["import { HOST } from '../../commons/hosts';\r\nimport RestApiClient from \"../../commons/api/rest-client\";\r\n\r\nconst endpoint = {\r\n    device: '/getDevices',\r\n    deleteDevice: '/deleteDevice',\r\n    createDevice: '/createDevice',\r\n    editDevice: '/updateDevice'\r\n};\r\n\r\nfunction getDevices(token) {\r\n    return new Promise((resolve, reject) => {\r\n        let request = new Request(HOST.backend_devices + endpoint.device, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token,  // Include the token in the Authorization header\r\n            },\r\n        });\r\n\r\n        RestApiClient.performRequest(request)\r\n            .then(response => response.json())\r\n            .then(result => resolve(result))\r\n            .catch(error => reject(error));\r\n    });\r\n}\r\n\r\nfunction getDeviceById(params, callback) {\r\n    const token = sessionStorage.getItem('token');\r\n    let request = new Request(HOST.backend_devices + endpoint.device + params.id, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n        },\r\n    });\r\n    RestApiClient.performRequest(request, callback);\r\n}\r\n\r\nfunction postDevice(user, callback) {\r\n    const token = sessionStorage.getItem('token');\r\n    let request = new Request(HOST.backend_devices + endpoint.createDevice, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(user)\r\n    });\r\n    RestApiClient.performRequest(request, callback);\r\n}\r\n\r\nfunction deleteDevice(id, token, callback) {\r\n    let request = new Request(HOST.backend_devices + endpoint.deleteDevice + '/' + id, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n        },\r\n    });\r\n\r\n    console.log(\"URL: \" + request.url);\r\n\r\n    RestApiClient.performRequest(request, callback);\r\n}\r\n\r\nfunction editDevice(id, device, token, callback) {\r\n    let request = new Request(HOST.backend_devices + endpoint.editDevice + `/` + id, {\r\n        method: 'PATCH',\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(device),\r\n    });\r\n    RestApiClient.performRequest(request, callback);\r\n}\r\n\r\n\r\nexport {\r\n    getDevices,\r\n    getDeviceById,\r\n    postDevice,\r\n    deleteDevice,\r\n    editDevice\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}