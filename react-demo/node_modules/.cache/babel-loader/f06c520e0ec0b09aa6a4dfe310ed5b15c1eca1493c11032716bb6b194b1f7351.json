{"ast":null,"code":"import _toConsumableArray from \"D:/MATERIALE AN 4 SEM 1/SD/proiect/ds2023_30642_fazakas_edina_assignment_1/react-demo/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"D:/MATERIALE AN 4 SEM 1/SD/proiect/ds2023_30642_fazakas_edina_assignment_1/react-demo/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"D:\\\\MATERIALE AN 4 SEM 1\\\\SD\\\\proiect\\\\ds2023_30642_fazakas_edina_assignment_1\\\\react-demo\\\\src\\\\ChatComponent.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport * as Stomp from 'webstomp-client';\nimport './chat-styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ChatComponent = function ChatComponent() {\n  _s();\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    stompClient = _useState2[0],\n    setStompClient = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    messages = _useState4[0],\n    setMessages = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    inputMessage = _useState6[0],\n    setInputMessage = _useState6[1];\n  useEffect(function () {\n    var socket = new WebSocket(process.env.NODE_ENV === 'development' ? 'ws://localhost:1010/chat' // Update the port if necessary\n    : 'wss://your-production-url/chat');\n    var stomp = Stomp.over(socket);\n    stomp.connect({}, function () {\n      setStompClient(stomp);\n      console.log('Connected to WebSocket');\n\n      // Subscribe to the correct topics based on user role\n      var userRole = 'admin'; // Set the user role dynamically or fetch it from your authentication system\n      var messageTopic = \"/topic/\".concat(userRole === 'admin' ? 'user' : 'admin');\n      var typingTopic = \"/topic/\".concat(userRole === 'admin' ? 'userTyping' : 'adminTyping');\n      var seenTopic = \"/topic/\".concat(userRole === 'admin' ? 'userSeen' : 'adminSeen');\n      stomp.subscribe(messageTopic, onMessage);\n      stomp.subscribe(typingTopic, onTyping);\n      stomp.subscribe(seenTopic, onMessageSeen);\n    }, function (error) {\n      console.error('WebSocket connection error:', error);\n    });\n    return function () {\n      if (stomp.connected) {\n        stomp.disconnect();\n      }\n    };\n  }, []);\n  var onMessage = function onMessage(msg) {\n    var newMessage = JSON.parse(msg.body);\n    setMessages([].concat(_toConsumableArray(messages), [newMessage]));\n  };\n  var onTyping = function onTyping(msg) {\n    // Handle typing notifications\n    console.log('Typing notification:', JSON.parse(msg.body));\n  };\n  var onMessageSeen = function onMessageSeen(msg) {\n    // Handle message seen notifications\n    console.log('Message seen notification:', JSON.parse(msg.body));\n  };\n  var sendMessage = function sendMessage() {\n    if (stompClient && stompClient.connected && inputMessage.trim() !== '') {\n      var message = {\n        from: 'admin',\n        // Set the sender dynamically or fetch it from your authentication system\n        message: inputMessage\n      };\n\n      // Send the message to the server using Stomp\n      stompClient.send('/app/chat/sendMessage', {}, JSON.stringify(message));\n\n      // Clear the input field after sending the message\n      setInputMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map(function (msg, index) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.from, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, _this), \" \", msg.message]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputMessage,\n        onChange: function onChange(e) {\n          return setInputMessage(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        disabled: !stompClient || !stompClient.connected,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, _this);\n};\n_s(ChatComponent, \"koYY3igOhcGKMZ3kD4VekHaDT38=\");\n_c = ChatComponent;\nexport default ChatComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatComponent\");","map":{"version":3,"names":["React","useState","useEffect","Stomp","jsxDEV","_jsxDEV","ChatComponent","_s","_useState","_useState2","_slicedToArray","stompClient","setStompClient","_useState3","_useState4","messages","setMessages","_useState5","_useState6","inputMessage","setInputMessage","socket","WebSocket","process","env","NODE_ENV","stomp","over","connect","console","log","userRole","messageTopic","concat","typingTopic","seenTopic","subscribe","onMessage","onTyping","onMessageSeen","error","connected","disconnect","msg","newMessage","JSON","parse","body","_toConsumableArray","sendMessage","trim","message","from","send","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","_this","map","index","type","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/MATERIALE AN 4 SEM 1/SD/proiect/ds2023_30642_fazakas_edina_assignment_1/react-demo/src/ChatComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport * as Stomp from 'webstomp-client';\r\nimport './chat-styles.css';\r\n\r\nconst ChatComponent = () => {\r\n    const [stompClient, setStompClient] = useState(null);\r\n    const [messages, setMessages] = useState([]);\r\n    const [inputMessage, setInputMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        const socket = new WebSocket(\r\n            process.env.NODE_ENV === 'development'\r\n                ? 'ws://localhost:1010/chat'  // Update the port if necessary\r\n                : 'wss://your-production-url/chat'\r\n        );\r\n        const stomp = Stomp.over(socket);\r\n\r\n        stomp.connect({}, () => {\r\n            setStompClient(stomp);\r\n            console.log('Connected to WebSocket');\r\n\r\n            // Subscribe to the correct topics based on user role\r\n            const userRole = 'admin'; // Set the user role dynamically or fetch it from your authentication system\r\n            const messageTopic = `/topic/${userRole === 'admin' ? 'user' : 'admin'}`;\r\n            const typingTopic = `/topic/${userRole === 'admin' ? 'userTyping' : 'adminTyping'}`;\r\n            const seenTopic = `/topic/${userRole === 'admin' ? 'userSeen' : 'adminSeen'}`;\r\n\r\n            stomp.subscribe(messageTopic, onMessage);\r\n            stomp.subscribe(typingTopic, onTyping);\r\n            stomp.subscribe(seenTopic, onMessageSeen);\r\n        }, (error) => {\r\n            console.error('WebSocket connection error:', error);\r\n        });\r\n\r\n        return () => {\r\n            if (stomp.connected) {\r\n                stomp.disconnect();\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    const onMessage = (msg) => {\r\n        const newMessage = JSON.parse(msg.body);\r\n        setMessages([...messages, newMessage]);\r\n    };\r\n\r\n    const onTyping = (msg) => {\r\n        // Handle typing notifications\r\n        console.log('Typing notification:', JSON.parse(msg.body));\r\n    };\r\n\r\n    const onMessageSeen = (msg) => {\r\n        // Handle message seen notifications\r\n        console.log('Message seen notification:', JSON.parse(msg.body));\r\n    };\r\n\r\n    const sendMessage = () => {\r\n        if (stompClient && stompClient.connected && inputMessage.trim() !== '') {\r\n            const message = {\r\n                from: 'admin', // Set the sender dynamically or fetch it from your authentication system\r\n                message: inputMessage,\r\n            };\r\n\r\n            // Send the message to the server using Stomp\r\n            stompClient.send('/app/chat/sendMessage', {}, JSON.stringify(message));\r\n\r\n            // Clear the input field after sending the message\r\n            setInputMessage('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Chat</h2>\r\n            <div>\r\n                {messages.map((msg, index) => (\r\n                    <div key={index}>\r\n                        <strong>{msg.from}:</strong> {msg.message}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div>\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputMessage}\r\n                    onChange={(e) => setInputMessage(e.target.value)}\r\n                />\r\n                <button onClick={sendMessage} disabled={!stompClient || !stompClient.connected}>\r\n                    Send\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}