{"ast":null,"code":"import _slicedToArray from \"D:/MATERIALE AN 4 SEM 1/SD/proiect/ds2023_30642_fazakas_edina_assignment_1/react-demo/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"D:\\\\MATERIALE AN 4 SEM 1\\\\SD\\\\proiect\\\\ds2023_30642_fazakas_edina_assignment_1\\\\react-demo\\\\src\\\\energyConsumption.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CalendarComponent from './calendarComponent';\nimport LineChart from './lineChart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar EnergyConsumption = function EnergyConsumption() {\n  _s();\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedDate = _useState2[0],\n    setSelectedDate = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedDevice = _useState4[0],\n    setSelectedDevice = _useState4[1];\n  var handleDateSelect = function handleDateSelect(date) {\n    setSelectedDate(date);\n  };\n  var handleDeviceSelect = function handleDeviceSelect(event) {\n    setSelectedDevice(event.target.value);\n  };\n  var handleGenerateChart = function handleGenerateChart() {\n    // Logic to generate chart based on selectedDate and selectedDevice\n    // You can pass these values as props to the LineChart component\n    console.log('Generate chart for date:', selectedDate, 'and device:', selectedDevice);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Energy Consumption Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Date: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(CalendarComponent, {\n        onDateSelect: handleDateSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Device: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleDeviceSelect,\n        value: selectedDevice,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"device1\",\n          children: \"Device 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"device2\",\n          children: \"Device 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateChart,\n      children: \"Generate Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, _this), selectedDate && selectedDevice && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Selected Date: \", selectedDate.toDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Selected Device: \", selectedDevice]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(LineChart, {\n        selectedDate: selectedDate,\n        selectedDevice: selectedDevice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, _this);\n};\n_s(EnergyConsumption, \"9WcPTLKtCenqSiP0KheXk3dM0lo=\");\n_c = EnergyConsumption;\nexport default EnergyConsumption;\nvar _c;\n$RefreshReg$(_c, \"EnergyConsumption\");","map":{"version":3,"names":["React","useState","CalendarComponent","LineChart","jsxDEV","_jsxDEV","EnergyConsumption","_s","_useState","_useState2","_slicedToArray","selectedDate","setSelectedDate","_useState3","_useState4","selectedDevice","setSelectedDevice","handleDateSelect","date","handleDeviceSelect","event","target","value","handleGenerateChart","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_this","onDateSelect","onChange","onClick","toDateString","_c","$RefreshReg$"],"sources":["D:/MATERIALE AN 4 SEM 1/SD/proiect/ds2023_30642_fazakas_edina_assignment_1/react-demo/src/energyConsumption.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport CalendarComponent from './calendarComponent';\r\nimport LineChart from './lineChart.js';\r\n\r\nconst EnergyConsumption = () => {\r\n    const [selectedDate, setSelectedDate] = useState(null);\r\n    const [selectedDevice, setSelectedDevice] = useState(null);\r\n\r\n    const handleDateSelect = (date) => {\r\n        setSelectedDate(date);\r\n    };\r\n\r\n    const handleDeviceSelect = (event) => {\r\n        setSelectedDevice(event.target.value);\r\n    };\r\n\r\n    const handleGenerateChart = () => {\r\n        // Logic to generate chart based on selectedDate and selectedDevice\r\n        // You can pass these values as props to the LineChart component\r\n        console.log('Generate chart for date:', selectedDate, 'and device:', selectedDevice);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Energy Consumption Chart</h2>\r\n\r\n            <div>\r\n                <label>Select Date: </label>\r\n                <CalendarComponent onDateSelect={handleDateSelect} />\r\n            </div>\r\n\r\n            <div>\r\n                <label>Select Device: </label>\r\n                <select onChange={handleDeviceSelect} value={selectedDevice}>\r\n                    <option value=\"device1\">Device 1</option>\r\n                    <option value=\"device2\">Device 2</option>\r\n                    {/* Add more options based on your devices */}\r\n                </select>\r\n            </div>\r\n\r\n            <button onClick={handleGenerateChart}>Generate Chart</button>\r\n\r\n            {selectedDate && selectedDevice && (\r\n                <div>\r\n                    <h3>Selected Date: {selectedDate.toDateString()}</h3>\r\n                    <h3>Selected Device: {selectedDevice}</h3>\r\n                    {/* Pass selectedDate and selectedDevice as props to the LineChart component */}\r\n                    <LineChart selectedDate={selectedDate} selectedDevice={selectedDevice} />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EnergyConsumption;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}