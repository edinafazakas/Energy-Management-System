{"ast":null,"code":"import _toConsumableArray from \"D:/MATERIALE AN 4 SEM 1/SD/proiect/ds2023_30642_fazakas_edina_assignment_1/react-demo/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"D:/MATERIALE AN 4 SEM 1/SD/proiect/ds2023_30642_fazakas_edina_assignment_1/react-demo/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"D:\\\\MATERIALE AN 4 SEM 1\\\\SD\\\\proiect\\\\ds2023_30642_fazakas_edina_assignment_1\\\\react-demo\\\\src\\\\ChatComponent.js\",\n  _this = this,\n  _s = $RefreshSig$();\n// ChatComponent.js\nimport React, { useState, useEffect } from 'react';\nimport SockJS from 'sockjs-client';\nimport Stomp from 'stompjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ChatComponent = function ChatComponent() {\n  _s();\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    stompClient = _useState2[0],\n    setStompClient = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    messages = _useState4[0],\n    setMessages = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    inputMessage = _useState6[0],\n    setInputMessage = _useState6[1];\n  useEffect(function () {\n    // Create a WebSocket connection\n    var socket = new SockJS('/chat');\n    var stomp = Stomp.over(socket);\n    setStompClient(stomp);\n\n    // Connect to the WebSocket server\n    stomp.connect({}, function () {\n      // Subscribe to the topic for receiving messages\n      stomp.subscribe('/topic/user', function (message) {\n        var newMessage = JSON.parse(message.body);\n        setMessages([].concat(_toConsumableArray(messages), [newMessage]));\n      });\n    });\n\n    // Clean up the WebSocket connection on component unmount\n    return function () {\n      if (stomp.connected) {\n        stomp.disconnect();\n      }\n    };\n  }, [messages]);\n  var sendMessage = function sendMessage() {\n    if (stompClient && inputMessage.trim() !== '') {\n      var message = {\n        from: 'client',\n        // Update with the user's role or ID\n        message: inputMessage\n      };\n\n      // Send the message to the server\n      stompClient.send('/app/chat/sendMessage', {}, JSON.stringify(message));\n\n      // Clear the input field\n      setInputMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map(function (msg, index) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.from, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, _this), \" \", msg.message]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputMessage,\n        onChange: function onChange(e) {\n          return setInputMessage(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, _this);\n};\n_s(ChatComponent, \"koYY3igOhcGKMZ3kD4VekHaDT38=\");\n_c = ChatComponent;\nexport default ChatComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatComponent\");","map":{"version":3,"names":["React","useState","useEffect","SockJS","Stomp","jsxDEV","_jsxDEV","ChatComponent","_s","_useState","_useState2","_slicedToArray","stompClient","setStompClient","_useState3","_useState4","messages","setMessages","_useState5","_useState6","inputMessage","setInputMessage","socket","stomp","over","connect","subscribe","message","newMessage","JSON","parse","body","concat","_toConsumableArray","connected","disconnect","sendMessage","trim","from","send","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","_this","map","msg","index","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/MATERIALE AN 4 SEM 1/SD/proiect/ds2023_30642_fazakas_edina_assignment_1/react-demo/src/ChatComponent.js"],"sourcesContent":["// ChatComponent.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport SockJS from 'sockjs-client';\r\nimport Stomp from 'stompjs';\r\n\r\nconst ChatComponent = () => {\r\n    const [stompClient, setStompClient] = useState(null);\r\n    const [messages, setMessages] = useState([]);\r\n    const [inputMessage, setInputMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        // Create a WebSocket connection\r\n        const socket = new SockJS('/chat');\r\n        const stomp = Stomp.over(socket);\r\n        setStompClient(stomp);\r\n\r\n        // Connect to the WebSocket server\r\n        stomp.connect({}, () => {\r\n            // Subscribe to the topic for receiving messages\r\n            stomp.subscribe('/topic/user', (message) => {\r\n                const newMessage = JSON.parse(message.body);\r\n                setMessages([...messages, newMessage]);\r\n            });\r\n        });\r\n\r\n        // Clean up the WebSocket connection on component unmount\r\n        return () => {\r\n            if (stomp.connected) {\r\n                stomp.disconnect();\r\n            }\r\n        };\r\n    }, [messages]);\r\n\r\n    const sendMessage = () => {\r\n        if (stompClient && inputMessage.trim() !== '') {\r\n            const message = {\r\n                from: 'client', // Update with the user's role or ID\r\n                message: inputMessage,\r\n            };\r\n\r\n            // Send the message to the server\r\n            stompClient.send('/app/chat/sendMessage', {}, JSON.stringify(message));\r\n\r\n            // Clear the input field\r\n            setInputMessage('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Chat</h2>\r\n            <div>\r\n                {messages.map((msg, index) => (\r\n                    <div key={index}>\r\n                        <strong>{msg.from}:</strong> {msg.message}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div>\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputMessage}\r\n                    onChange={(e) => setInputMessage(e.target.value)}\r\n                />\r\n                <button onClick={sendMessage}>Send</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}