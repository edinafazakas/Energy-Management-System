{"ast":null,"code":"import { HOST } from '../../commons/hosts';\nimport RestApiClient from \"../../commons/api/rest-client\";\nvar endpoint = {\n  userDevices: '/getUserDevices',\n  createUser: '/postUser',\n  deleteUser: '/deleteUser',\n  editUser: '/updateUser'\n};\nfunction getUserDevices(callback) {\n  var request = new Request(HOST.backend_devices + endpoint.userDevices, {\n    method: 'GET'\n  });\n  console.log(request.url);\n  RestApiClient.performRequest(request, callback);\n}\n\n// function getPersonById(params, callback){\n//     let request = new Request(HOST.backend_api + endpoint.person + params.id, {\n//        method: 'GET'\n//     });\n//\n//     console.log(request.url);\n//     RestApiClient.performRequest(request, callback);\n// }\n//\n// function getUserById(params, callback){\n//     let request = new Request(HOST.backend_api + endpoint.person + params.id, {\n//         method: 'GET'\n//     });\n//\n//     console.log(request.url);\n//     RestApiClient.performRequest(request, callback);\n// }\n//\n// function deletePerson(id, callback) {\n//     let request = new Request(HOST.backend_api + endpoint.deleteUser + '/' + id, {\n//         method: 'DELETE',\n//     });\n//\n//     console.log(\"URL: \" + request.url);\n//\n//     RestApiClient.performRequest(request, callback);\n// }\n//\n// function createUser(user, callback) {\n//     let request = new Request(HOST.backend_api + endpoint.createUser, {\n//         method: 'POST',\n//         headers: {\n//             'Accept': 'application/json',\n//             'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify(user), // Ensure that the user object matches the expected format\n//     });\n//\n//     console.log(\"URL: \" + request.url);\n//\n//     RestApiClient.performRequest(request, callback);\n// }\n//\n//\n// function editUser(id, user, callback) {\n//     let request = new Request(HOST.backend_api + endpoint.editUser + `/` + id, {\n//         method: 'PATCH',\n//         headers: {\n//             'Accept': 'application/json',\n//             'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify(user),\n//     });\n//\n//     RestApiClient.performRequest(request, callback);\n// }\n\nexport { getUserDevices\n// getPersonById,\n// deletePerson,\n// createUser,\n// editUser\n};","map":{"version":3,"names":["HOST","RestApiClient","endpoint","userDevices","createUser","deleteUser","editUser","getUserDevices","callback","request","Request","backend_devices","method","console","log","url","performRequest"],"sources":["D:/MATERIALE AN 4 SEM 1/SD/proiect/ds2023_30642_fazakas_edina_assignment_1/react-demo/src/userDevices/api/userDevice-api.js"],"sourcesContent":["import {HOST} from '../../commons/hosts';\r\nimport RestApiClient from \"../../commons/api/rest-client\";\r\n\r\n\r\nconst endpoint = {\r\n    userDevices: '/getUserDevices',\r\n    createUser: '/postUser',\r\n    deleteUser: '/deleteUser',\r\n    editUser: '/updateUser',\r\n};\r\n\r\nfunction getUserDevices(callback) {\r\n    let request = new Request(HOST.backend_devices + endpoint.userDevices, {\r\n        method: 'GET',\r\n    });\r\n    console.log(request.url);\r\n    RestApiClient.performRequest(request, callback);\r\n}\r\n\r\n// function getPersonById(params, callback){\r\n//     let request = new Request(HOST.backend_api + endpoint.person + params.id, {\r\n//        method: 'GET'\r\n//     });\r\n//\r\n//     console.log(request.url);\r\n//     RestApiClient.performRequest(request, callback);\r\n// }\r\n//\r\n// function getUserById(params, callback){\r\n//     let request = new Request(HOST.backend_api + endpoint.person + params.id, {\r\n//         method: 'GET'\r\n//     });\r\n//\r\n//     console.log(request.url);\r\n//     RestApiClient.performRequest(request, callback);\r\n// }\r\n//\r\n// function deletePerson(id, callback) {\r\n//     let request = new Request(HOST.backend_api + endpoint.deleteUser + '/' + id, {\r\n//         method: 'DELETE',\r\n//     });\r\n//\r\n//     console.log(\"URL: \" + request.url);\r\n//\r\n//     RestApiClient.performRequest(request, callback);\r\n// }\r\n//\r\n// function createUser(user, callback) {\r\n//     let request = new Request(HOST.backend_api + endpoint.createUser, {\r\n//         method: 'POST',\r\n//         headers: {\r\n//             'Accept': 'application/json',\r\n//             'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify(user), // Ensure that the user object matches the expected format\r\n//     });\r\n//\r\n//     console.log(\"URL: \" + request.url);\r\n//\r\n//     RestApiClient.performRequest(request, callback);\r\n// }\r\n//\r\n//\r\n// function editUser(id, user, callback) {\r\n//     let request = new Request(HOST.backend_api + endpoint.editUser + `/` + id, {\r\n//         method: 'PATCH',\r\n//         headers: {\r\n//             'Accept': 'application/json',\r\n//             'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify(user),\r\n//     });\r\n//\r\n//     RestApiClient.performRequest(request, callback);\r\n// }\r\n\r\n\r\nexport {\r\n    getUserDevices,\r\n    // getPersonById,\r\n    // deletePerson,\r\n    // createUser,\r\n    // editUser\r\n};\r\n"],"mappings":"AAAA,SAAQA,IAAI,QAAO,qBAAqB;AACxC,OAAOC,aAAa,MAAM,+BAA+B;AAGzD,IAAMC,QAAQ,GAAG;EACbC,WAAW,EAAE,iBAAiB;EAC9BC,UAAU,EAAE,WAAW;EACvBC,UAAU,EAAE,aAAa;EACzBC,QAAQ,EAAE;AACd,CAAC;AAED,SAASC,cAAcA,CAACC,QAAQ,EAAE;EAC9B,IAAIC,OAAO,GAAG,IAAIC,OAAO,CAACV,IAAI,CAACW,eAAe,GAAGT,QAAQ,CAACC,WAAW,EAAE;IACnES,MAAM,EAAE;EACZ,CAAC,CAAC;EACFC,OAAO,CAACC,GAAG,CAACL,OAAO,CAACM,GAAG,CAAC;EACxBd,aAAa,CAACe,cAAc,CAACP,OAAO,EAAED,QAAQ,CAAC;AACnD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SACID;AACA;AACA;AACA;AACA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}