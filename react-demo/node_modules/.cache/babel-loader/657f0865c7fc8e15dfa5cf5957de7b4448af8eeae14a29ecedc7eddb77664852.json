{"ast":null,"code":"import { HOST } from '../../commons/hosts';\nimport RestApiClient from \"../../commons/api/rest-client\";\nvar endpoint = {\n  device: '/getDevices',\n  deleteDevice: '/deleteDevice',\n  createDevice: '/createDevice',\n  editDevice: '/updateDevice'\n};\nfunction getDevices(callback) {\n  var request = new Request(HOST.backend_devices + endpoint.device, {\n    method: 'GET'\n  });\n  RestApiClient.performRequest(request, callback);\n}\nfunction getDeviceById(params, callback) {\n  var request = new Request(HOST.backend_devices + endpoint.device + params.id, {\n    method: 'GET'\n  });\n  RestApiClient.performRequest(request, callback);\n}\nfunction postDevice(user, callback) {\n  var request = new Request(HOST.backend_devices + endpoint.createDevice, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  });\n  RestApiClient.performRequest(request, callback);\n}\nfunction deleteDevice(id, callback) {\n  var request = new Request(HOST.backend_devices + endpoint.deleteDevice + '/' + id, {\n    method: 'DELETE'\n  });\n  console.log(\"URL: \" + request.url);\n  RestApiClient.performRequest(request, callback);\n}\nfunction editDevice(id, device, callback) {\n  var request = new Request(HOST.backend_devices + endpoint.editDevice + \"/\" + id, {\n    method: 'PATCH',\n    // Use the PATCH method for updating\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(device)\n  });\n  RestApiClient.performRequest(request, callback);\n}\nexport { getDevices, getDeviceById, postDevice, deleteDevice, editDevice };","map":{"version":3,"names":["HOST","RestApiClient","endpoint","device","deleteDevice","createDevice","editDevice","getDevices","callback","request","Request","backend_devices","method","performRequest","getDeviceById","params","id","postDevice","user","headers","body","JSON","stringify","console","log","url"],"sources":["D:/MATERIALE AN 4 SEM 1/SD/proiect/ds2023_30642_fazakas_edina_assignment_1/react-demo/src/device/api/device-api.js"],"sourcesContent":["import { HOST } from '../../commons/hosts';\r\nimport RestApiClient from \"../../commons/api/rest-client\";\r\n\r\nconst endpoint = {\r\n    device: '/getDevices',\r\n    deleteDevice: '/deleteDevice',\r\n    createDevice: '/createDevice',\r\n    editDevice: '/updateDevice'\r\n};\r\n\r\nfunction getDevices(callback) {\r\n    let request = new Request(HOST.backend_devices + endpoint.device, {\r\n        method: 'GET',\r\n    });\r\n    RestApiClient.performRequest(request, callback);\r\n}\r\n\r\nfunction getDeviceById(params, callback) {\r\n    let request = new Request(HOST.backend_devices + endpoint.device + params.id, {\r\n        method: 'GET',\r\n    });\r\n    RestApiClient.performRequest(request, callback);\r\n}\r\n\r\nfunction postDevice(user, callback) {\r\n    let request = new Request(HOST.backend_devices + endpoint.createDevice, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(user)\r\n    });\r\n    RestApiClient.performRequest(request, callback);\r\n}\r\n\r\nfunction deleteDevice(id, callback) {\r\n    let request = new Request(HOST.backend_devices + endpoint.deleteDevice + '/' + id, {\r\n        method: 'DELETE',\r\n    });\r\n\r\n    console.log(\"URL: \" + request.url);\r\n\r\n    RestApiClient.performRequest(request, callback);\r\n}\r\n\r\nfunction editDevice(id, device, callback) {\r\n    let request = new Request(HOST.backend_devices + endpoint.editDevice + `/` + id ,{\r\n        method: 'PATCH', // Use the PATCH method for updating\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(device),\r\n    });\r\n    RestApiClient.performRequest(request, callback);\r\n}\r\n\r\n\r\nexport {\r\n    getDevices,\r\n    getDeviceById,\r\n    postDevice,\r\n    deleteDevice,\r\n    editDevice\r\n};\r\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,qBAAqB;AAC1C,OAAOC,aAAa,MAAM,+BAA+B;AAEzD,IAAMC,QAAQ,GAAG;EACbC,MAAM,EAAE,aAAa;EACrBC,YAAY,EAAE,eAAe;EAC7BC,YAAY,EAAE,eAAe;EAC7BC,UAAU,EAAE;AAChB,CAAC;AAED,SAASC,UAAUA,CAACC,QAAQ,EAAE;EAC1B,IAAIC,OAAO,GAAG,IAAIC,OAAO,CAACV,IAAI,CAACW,eAAe,GAAGT,QAAQ,CAACC,MAAM,EAAE;IAC9DS,MAAM,EAAE;EACZ,CAAC,CAAC;EACFX,aAAa,CAACY,cAAc,CAACJ,OAAO,EAAED,QAAQ,CAAC;AACnD;AAEA,SAASM,aAAaA,CAACC,MAAM,EAAEP,QAAQ,EAAE;EACrC,IAAIC,OAAO,GAAG,IAAIC,OAAO,CAACV,IAAI,CAACW,eAAe,GAAGT,QAAQ,CAACC,MAAM,GAAGY,MAAM,CAACC,EAAE,EAAE;IAC1EJ,MAAM,EAAE;EACZ,CAAC,CAAC;EACFX,aAAa,CAACY,cAAc,CAACJ,OAAO,EAAED,QAAQ,CAAC;AACnD;AAEA,SAASS,UAAUA,CAACC,IAAI,EAAEV,QAAQ,EAAE;EAChC,IAAIC,OAAO,GAAG,IAAIC,OAAO,CAACV,IAAI,CAACW,eAAe,GAAGT,QAAQ,CAACG,YAAY,EAAE;IACpEO,MAAM,EAAE,MAAM;IACdO,OAAO,EAAE;MACL,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI;EAC7B,CAAC,CAAC;EACFjB,aAAa,CAACY,cAAc,CAACJ,OAAO,EAAED,QAAQ,CAAC;AACnD;AAEA,SAASJ,YAAYA,CAACY,EAAE,EAAER,QAAQ,EAAE;EAChC,IAAIC,OAAO,GAAG,IAAIC,OAAO,CAACV,IAAI,CAACW,eAAe,GAAGT,QAAQ,CAACE,YAAY,GAAG,GAAG,GAAGY,EAAE,EAAE;IAC/EJ,MAAM,EAAE;EACZ,CAAC,CAAC;EAEFW,OAAO,CAACC,GAAG,CAAC,OAAO,GAAGf,OAAO,CAACgB,GAAG,CAAC;EAElCxB,aAAa,CAACY,cAAc,CAACJ,OAAO,EAAED,QAAQ,CAAC;AACnD;AAEA,SAASF,UAAUA,CAACU,EAAE,EAAEb,MAAM,EAAEK,QAAQ,EAAE;EACtC,IAAIC,OAAO,GAAG,IAAIC,OAAO,CAACV,IAAI,CAACW,eAAe,GAAGT,QAAQ,CAACI,UAAU,MAAM,GAAGU,EAAE,EAAE;IAC7EJ,MAAM,EAAE,OAAO;IAAE;IACjBO,OAAO,EAAE;MACL,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACnB,MAAM;EAC/B,CAAC,CAAC;EACFF,aAAa,CAACY,cAAc,CAACJ,OAAO,EAAED,QAAQ,CAAC;AACnD;AAGA,SACID,UAAU,EACVO,aAAa,EACbG,UAAU,EACVb,YAAY,EACZE,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}