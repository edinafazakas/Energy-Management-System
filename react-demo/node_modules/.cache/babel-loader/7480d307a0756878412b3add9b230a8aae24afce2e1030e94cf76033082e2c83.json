{"ast":null,"code":"import { HOST } from '../../commons/hosts';\nimport RestApiClient from \"../../commons/api/rest-client\";\nvar endpoint = {\n  person: '/users',\n  createUser: '/postUser',\n  deleteUser: '/deleteUser',\n  editUser: '/updateUser'\n};\nfunction getPersons(callback) {\n  var request = new Request(HOST.backend_api + endpoint.person, {\n    method: 'GET'\n  });\n  console.log(request.url);\n  RestApiClient.performRequest(request, callback);\n}\n\n// function getPersonById(params, callback){\n//     let request = new Request(HOST.backend_api + endpoint.person + params.id, {\n//        method: 'GET'\n//     });\n//\n//     console.log(request.url);\n//     RestApiClient.performRequest(request, callback);\n// }\n\nfunction getUserByUsername(username, callback) {\n  var request = new Request(HOST.backend_api + '/findByUsername/' + username, {\n    method: 'GET'\n  });\n  RestApiClient.performRequest(request, callback);\n}\n\n// function getUserById(params, callback){\n//     let request = new Request(HOST.backend_api + endpoint.person + params.id, {\n//         method: 'GET'\n//     });\n//\n//     console.log(request.url);\n//     RestApiClient.performRequest(request, callback);\n// }\n\nfunction deletePerson(id, callback) {\n  var request = new Request(HOST.backend_api + endpoint.deleteUser + '/' + id, {\n    method: 'DELETE'\n  });\n  console.log(\"URL: \" + request.url);\n  RestApiClient.performRequest(request, callback);\n}\nfunction createUser(user, callback) {\n  var request = new Request(HOST.backend_api + endpoint.createUser, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user) // Ensure that the user object matches the expected format\n  });\n\n  console.log(\"URL: \" + request.url);\n  RestApiClient.performRequest(request, callback);\n}\nfunction editUser(id, user, callback) {\n  var request = new Request(HOST.backend_api + endpoint.editUser + \"/\" + id, {\n    method: 'PATCH',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  });\n  RestApiClient.performRequest(request, callback);\n}\nexport { getPersons, deletePerson, createUser, editUser, getUserByUsername };","map":{"version":3,"names":["HOST","RestApiClient","endpoint","person","createUser","deleteUser","editUser","getPersons","callback","request","Request","backend_api","method","console","log","url","performRequest","getUserByUsername","username","deletePerson","id","user","headers","body","JSON","stringify"],"sources":["D:/MATERIALE AN 4 SEM 1/SD/proiect/ds2023_30642_fazakas_edina_assignment_1/react-demo/src/person/api/person-api.js"],"sourcesContent":["import {HOST} from '../../commons/hosts';\r\nimport RestApiClient from \"../../commons/api/rest-client\";\r\n\r\n\r\nconst endpoint = {\r\n    person: '/users',\r\n    createUser: '/postUser',\r\n    deleteUser: '/deleteUser',\r\n    editUser: '/updateUser',\r\n};\r\n\r\nfunction getPersons(callback) {\r\n    let request = new Request(HOST.backend_api + endpoint.person, {\r\n        method: 'GET',\r\n    });\r\n    console.log(request.url);\r\n    RestApiClient.performRequest(request, callback);\r\n}\r\n\r\n// function getPersonById(params, callback){\r\n//     let request = new Request(HOST.backend_api + endpoint.person + params.id, {\r\n//        method: 'GET'\r\n//     });\r\n//\r\n//     console.log(request.url);\r\n//     RestApiClient.performRequest(request, callback);\r\n// }\r\n\r\nfunction getUserByUsername(username, callback) {\r\n    let request = new Request(HOST.backend_api + '/findByUsername/' + username, {\r\n        method: 'GET',\r\n    });\r\n    RestApiClient.performRequest(request, callback);\r\n}\r\n\r\n\r\n// function getUserById(params, callback){\r\n//     let request = new Request(HOST.backend_api + endpoint.person + params.id, {\r\n//         method: 'GET'\r\n//     });\r\n//\r\n//     console.log(request.url);\r\n//     RestApiClient.performRequest(request, callback);\r\n// }\r\n\r\nfunction deletePerson(id, callback) {\r\n    let request = new Request(HOST.backend_api + endpoint.deleteUser + '/' + id, {\r\n        method: 'DELETE',\r\n    });\r\n\r\n    console.log(\"URL: \" + request.url);\r\n\r\n    RestApiClient.performRequest(request, callback);\r\n}\r\n\r\nfunction createUser(user, callback) {\r\n    let request = new Request(HOST.backend_api + endpoint.createUser, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(user), // Ensure that the user object matches the expected format\r\n    });\r\n\r\n    console.log(\"URL: \" + request.url);\r\n\r\n    RestApiClient.performRequest(request, callback);\r\n}\r\n\r\n\r\nfunction editUser(id, user, callback) {\r\n    let request = new Request(HOST.backend_api + endpoint.editUser + `/` + id, {\r\n        method: 'PATCH',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(user),\r\n    });\r\n\r\n    RestApiClient.performRequest(request, callback);\r\n}\r\n\r\n\r\nexport {\r\n    getPersons,\r\n    deletePerson,\r\n    createUser,\r\n    editUser,\r\n    getUserByUsername\r\n};\r\n"],"mappings":"AAAA,SAAQA,IAAI,QAAO,qBAAqB;AACxC,OAAOC,aAAa,MAAM,+BAA+B;AAGzD,IAAMC,QAAQ,GAAG;EACbC,MAAM,EAAE,QAAQ;EAChBC,UAAU,EAAE,WAAW;EACvBC,UAAU,EAAE,aAAa;EACzBC,QAAQ,EAAE;AACd,CAAC;AAED,SAASC,UAAUA,CAACC,QAAQ,EAAE;EAC1B,IAAIC,OAAO,GAAG,IAAIC,OAAO,CAACV,IAAI,CAACW,WAAW,GAAGT,QAAQ,CAACC,MAAM,EAAE;IAC1DS,MAAM,EAAE;EACZ,CAAC,CAAC;EACFC,OAAO,CAACC,GAAG,CAACL,OAAO,CAACM,GAAG,CAAC;EACxBd,aAAa,CAACe,cAAc,CAACP,OAAO,EAAED,QAAQ,CAAC;AACnD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASS,iBAAiBA,CAACC,QAAQ,EAAEV,QAAQ,EAAE;EAC3C,IAAIC,OAAO,GAAG,IAAIC,OAAO,CAACV,IAAI,CAACW,WAAW,GAAG,kBAAkB,GAAGO,QAAQ,EAAE;IACxEN,MAAM,EAAE;EACZ,CAAC,CAAC;EACFX,aAAa,CAACe,cAAc,CAACP,OAAO,EAAED,QAAQ,CAAC;AACnD;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASW,YAAYA,CAACC,EAAE,EAAEZ,QAAQ,EAAE;EAChC,IAAIC,OAAO,GAAG,IAAIC,OAAO,CAACV,IAAI,CAACW,WAAW,GAAGT,QAAQ,CAACG,UAAU,GAAG,GAAG,GAAGe,EAAE,EAAE;IACzER,MAAM,EAAE;EACZ,CAAC,CAAC;EAEFC,OAAO,CAACC,GAAG,CAAC,OAAO,GAAGL,OAAO,CAACM,GAAG,CAAC;EAElCd,aAAa,CAACe,cAAc,CAACP,OAAO,EAAED,QAAQ,CAAC;AACnD;AAEA,SAASJ,UAAUA,CAACiB,IAAI,EAAEb,QAAQ,EAAE;EAChC,IAAIC,OAAO,GAAG,IAAIC,OAAO,CAACV,IAAI,CAACW,WAAW,GAAGT,QAAQ,CAACE,UAAU,EAAE;IAC9DQ,MAAM,EAAE,MAAM;IACdU,OAAO,EAAE;MACL,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAE;EAChC,CAAC,CAAC;;EAEFR,OAAO,CAACC,GAAG,CAAC,OAAO,GAAGL,OAAO,CAACM,GAAG,CAAC;EAElCd,aAAa,CAACe,cAAc,CAACP,OAAO,EAAED,QAAQ,CAAC;AACnD;AAGA,SAASF,QAAQA,CAACc,EAAE,EAAEC,IAAI,EAAEb,QAAQ,EAAE;EAClC,IAAIC,OAAO,GAAG,IAAIC,OAAO,CAACV,IAAI,CAACW,WAAW,GAAGT,QAAQ,CAACI,QAAQ,MAAM,GAAGc,EAAE,EAAE;IACvER,MAAM,EAAE,OAAO;IACfU,OAAO,EAAE;MACL,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI;EAC7B,CAAC,CAAC;EAEFpB,aAAa,CAACe,cAAc,CAACP,OAAO,EAAED,QAAQ,CAAC;AACnD;AAGA,SACID,UAAU,EACVY,YAAY,EACZf,UAAU,EACVE,QAAQ,EACRW,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}