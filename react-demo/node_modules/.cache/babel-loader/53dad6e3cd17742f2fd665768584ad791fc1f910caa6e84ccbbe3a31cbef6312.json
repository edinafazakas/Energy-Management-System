{"ast":null,"code":"import { HOST } from '../../commons/hosts';\nimport RestApiClient from \"../../commons/api/rest-client\";\nvar endpoint = {\n  device: '/getDevices',\n  deleteDevice: '/deleteDevice',\n  createDevice: '/createDevice',\n  editDevice: '/updateDevice'\n};\nfunction getDevices(token) {\n  var url = HOST.backend_devices + endpoint.device;\n  return fetch(url, {\n    method: 'GET',\n    headers: {\n      'Authorization': 'Bearer ' + token\n    }\n  }).then(function (response) {\n    return response.json();\n  });\n}\nfunction getDeviceById(params, callback) {\n  var token = sessionStorage.getItem('token');\n  var request = new Request(HOST.backend_devices + endpoint.device + params.id, {\n    method: 'GET',\n    headers: {\n      'Authorization': \"Bearer \".concat(token)\n    }\n  });\n  RestApiClient.performRequest(request, callback);\n}\nfunction postDevice(user, callback) {\n  var token = sessionStorage.getItem('token');\n  var request = new Request(HOST.backend_devices + endpoint.createDevice, {\n    method: 'POST',\n    headers: {\n      'Authorization': \"Bearer \".concat(token),\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  });\n  RestApiClient.performRequest(request, callback);\n}\nfunction deleteDevice(id, token, callback) {\n  var request = new Request(HOST.backend_devices + endpoint.deleteDevice + '/' + id, {\n    method: 'DELETE',\n    headers: {\n      'Authorization': \"Bearer \".concat(token)\n    }\n  });\n  console.log(\"URL: \" + request.url);\n  RestApiClient.performRequest(request, callback);\n}\nfunction editDevice(id, device, token, callback) {\n  var request = new Request(HOST.backend_devices + endpoint.editDevice + \"/\" + id, {\n    method: 'PATCH',\n    headers: {\n      'Authorization': \"Bearer \".concat(token),\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(device)\n  });\n  RestApiClient.performRequest(request, callback);\n}\nexport { getDevices, getDeviceById, postDevice, deleteDevice, editDevice };","map":{"version":3,"names":["HOST","RestApiClient","endpoint","device","deleteDevice","createDevice","editDevice","getDevices","token","url","backend_devices","fetch","method","headers","then","response","json","getDeviceById","params","callback","sessionStorage","getItem","request","Request","id","concat","performRequest","postDevice","user","body","JSON","stringify","console","log"],"sources":["D:/MATERIALE AN 4 SEM 1/SD/proiect/ds2023_30642_fazakas_edina_assignment_1/react-demo/src/device/api/device-api.js"],"sourcesContent":["import { HOST } from '../../commons/hosts';\r\nimport RestApiClient from \"../../commons/api/rest-client\";\r\n\r\nconst endpoint = {\r\n    device: '/getDevices',\r\n    deleteDevice: '/deleteDevice',\r\n    createDevice: '/createDevice',\r\n    editDevice: '/updateDevice'\r\n};\r\n\r\n\r\nfunction getDevices(token) {\r\n    const url = HOST.backend_devices + endpoint.device;\r\n\r\n    return fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + token,\r\n        },\r\n    })\r\n        .then(response => response.json());\r\n}\r\n\r\n\r\n\r\nfunction getDeviceById(params, callback) {\r\n    const token = sessionStorage.getItem('token');\r\n    let request = new Request(HOST.backend_devices + endpoint.device + params.id, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n        },\r\n    });\r\n    RestApiClient.performRequest(request, callback);\r\n}\r\n\r\nfunction postDevice(user, callback) {\r\n    const token = sessionStorage.getItem('token');\r\n    let request = new Request(HOST.backend_devices + endpoint.createDevice, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(user)\r\n    });\r\n    RestApiClient.performRequest(request, callback);\r\n}\r\n\r\nfunction deleteDevice(id, token, callback) {\r\n    let request = new Request(HOST.backend_devices + endpoint.deleteDevice + '/' + id, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n        },\r\n    });\r\n\r\n    console.log(\"URL: \" + request.url);\r\n\r\n    RestApiClient.performRequest(request, callback);\r\n}\r\n\r\nfunction editDevice(id, device, token, callback) {\r\n    let request = new Request(HOST.backend_devices + endpoint.editDevice + `/` + id, {\r\n        method: 'PATCH',\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(device),\r\n    });\r\n    RestApiClient.performRequest(request, callback);\r\n}\r\n\r\n\r\nexport {\r\n    getDevices,\r\n    getDeviceById,\r\n    postDevice,\r\n    deleteDevice,\r\n    editDevice\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}