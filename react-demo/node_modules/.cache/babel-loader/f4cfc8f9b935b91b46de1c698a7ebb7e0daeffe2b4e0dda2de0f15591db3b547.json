{"ast":null,"code":"import { HOST } from '../../commons/hosts';\nimport RestApiClient from \"../../commons/api/rest-client\";\nvar endpoint = {\n  person: '/users',\n  createUser: '/postUser',\n  deleteUser: '/deleteUser',\n  editUser: '/updateUser'\n};\nfunction getPersons(callback, token) {\n  var request = new Request(HOST.backend_api + endpoint.person, {\n    method: 'GET',\n    headers: {\n      'Authorization': \"Bearer \".concat(token) // Include the token in the headers\n    }\n  });\n\n  console.log(request.url);\n  RestApiClient.performRequest(request, callback);\n}\n\n// function getPersonById(params, callback){\n//     let request = new Request(HOST.backend_api + endpoint.person + params.id, {\n//        method: 'GET'\n//     });\n//\n//     console.log(request.url);\n//     RestApiClient.performRequest(request, callback);\n// }\n\nfunction getUserByUsername(username, callback) {\n  var request = new Request(HOST.backend_api + '/findByUsername/' + username, {\n    method: 'GET'\n  });\n  RestApiClient.performRequest(request, callback);\n}\n\n// function getUserById(params, callback){\n//     let request = new Request(HOST.backend_api + endpoint.person + params.id, {\n//         method: 'GET'\n//     });\n//\n//     console.log(request.url);\n//     RestApiClient.performRequest(request, callback);\n// }\n\nfunction deletePerson(id, callback, token) {\n  var request = new Request(HOST.backend_api + endpoint.deleteUser + '/' + id, {\n    method: 'DELETE',\n    headers: {\n      'Authorization': \"Bearer \".concat(token)\n    }\n  });\n  console.log(\"URL: \" + request.url);\n  RestApiClient.performRequest(request, callback);\n}\nfunction createUser(user, callback, token) {\n  var request = new Request(HOST.backend_api + endpoint.createUser, {\n    method: 'POST',\n    headers: {\n      'Authorization': \"Bearer \".concat(token),\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  });\n  console.log(\"URL: \" + request.url);\n  RestApiClient.performRequest(request, callback);\n}\nfunction editUser(id, user, callback) {\n  var request = new Request(HOST.backend_api + endpoint.editUser + \"/\" + id, {\n    method: 'PATCH',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  });\n  RestApiClient.performRequest(request, callback);\n}\nexport { getPersons, deletePerson, createUser, editUser, getUserByUsername };","map":{"version":3,"names":["HOST","RestApiClient","endpoint","person","createUser","deleteUser","editUser","getPersons","callback","token","request","Request","backend_api","method","headers","concat","console","log","url","performRequest","getUserByUsername","username","deletePerson","id","user","body","JSON","stringify"],"sources":["D:/MATERIALE AN 4 SEM 1/SD/proiect/ds2023_30642_fazakas_edina_assignment_1/react-demo/src/person/api/person-api.js"],"sourcesContent":["import {HOST} from '../../commons/hosts';\r\nimport RestApiClient from \"../../commons/api/rest-client\";\r\n\r\n\r\nconst endpoint = {\r\n    person: '/users',\r\n    createUser: '/postUser',\r\n    deleteUser: '/deleteUser',\r\n    editUser: '/updateUser',\r\n};\r\n\r\nfunction getPersons(callback, token) {\r\n    let request = new Request(HOST.backend_api + endpoint.person, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`, // Include the token in the headers\r\n        },\r\n    });\r\n    console.log(request.url);\r\n    RestApiClient.performRequest(request, callback);\r\n}\r\n\r\n// function getPersonById(params, callback){\r\n//     let request = new Request(HOST.backend_api + endpoint.person + params.id, {\r\n//        method: 'GET'\r\n//     });\r\n//\r\n//     console.log(request.url);\r\n//     RestApiClient.performRequest(request, callback);\r\n// }\r\n\r\nfunction getUserByUsername(username, callback) {\r\n    let request = new Request(HOST.backend_api + '/findByUsername/' + username, {\r\n        method: 'GET',\r\n    });\r\n    RestApiClient.performRequest(request, callback);\r\n}\r\n\r\n\r\n// function getUserById(params, callback){\r\n//     let request = new Request(HOST.backend_api + endpoint.person + params.id, {\r\n//         method: 'GET'\r\n//     });\r\n//\r\n//     console.log(request.url);\r\n//     RestApiClient.performRequest(request, callback);\r\n// }\r\n\r\nfunction deletePerson(id, callback, token) {\r\n    let request = new Request(HOST.backend_api + endpoint.deleteUser + '/' + id, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n        },\r\n    });\r\n\r\n    console.log(\"URL: \" + request.url);\r\n\r\n    RestApiClient.performRequest(request, callback);\r\n}\r\n\r\nfunction createUser(user, callback, token) {\r\n    let request = new Request(HOST.backend_api + endpoint.createUser, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(user),\r\n    });\r\n\r\n    console.log(\"URL: \" + request.url);\r\n\r\n    RestApiClient.performRequest(request, callback);\r\n}\r\n\r\n\r\nfunction editUser(id, user, callback) {\r\n    let request = new Request(HOST.backend_api + endpoint.editUser + `/` + id, {\r\n        method: 'PATCH',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(user),\r\n    });\r\n\r\n    RestApiClient.performRequest(request, callback);\r\n}\r\n\r\n\r\nexport {\r\n    getPersons,\r\n    deletePerson,\r\n    createUser,\r\n    editUser,\r\n    getUserByUsername\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}