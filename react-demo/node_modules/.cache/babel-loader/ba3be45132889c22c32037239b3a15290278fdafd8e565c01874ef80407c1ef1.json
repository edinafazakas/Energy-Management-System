{"ast":null,"code":"import { HOST } from '../../commons/hosts';\nimport RestApiClient from \"../../commons/api/rest-client\";\nvar endpoint = {\n  device: '/getDevices',\n  deleteDevice: '/deleteDevice',\n  createDevice: '/createDevice',\n  editDevice: '/updateDevice'\n};\nfunction getDevices(token, secretKey) {\n  var url = HOST.backend_devices + endpoint.device;\n  return fetch(url, {\n    method: 'GET',\n    headers: {\n      'Authorization': 'Bearer ' + token,\n      'Secret-Key': secretKey\n    }\n  }).then(function (response) {\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json();\n  }).then(function (data) {\n    console.log('Data received:', data);\n    return data;\n  }).catch(function (error) {\n    console.error('Error fetching devices:', error);\n    throw error;\n  });\n}\nfunction createDevice(device, secretKey) {\n  var token = sessionStorage.getItem('token');\n  var url = HOST.backend_devices + endpoint.createDevice;\n  return fetch(url, {\n    method: 'POST',\n    headers: {\n      'Authorization': \"Bearer \".concat(token),\n      'Secret-Key': secretKey,\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(device)\n  }).then(function (response) {\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json();\n  }).catch(function (error) {\n    console.error('Error creating device:', error);\n    throw error;\n  });\n}\nfunction deleteDevice(id, secretKey) {\n  var token = sessionStorage.getItem('token');\n  var url = HOST.backend_devices + endpoint.deleteDevice + '/' + id;\n  return fetch(url, {\n    method: 'DELETE',\n    headers: {\n      'Authorization': \"Bearer \".concat(token),\n      'Secret-Key': secretKey\n    }\n  }).then(function (response) {\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json();\n  }).catch(function (error) {\n    console.error('Error deleting device:', error);\n    throw error;\n  });\n}\nfunction editDevice(id, device, secretKey) {\n  var token = sessionStorage.getItem('token');\n  var url = HOST.backend_devices + endpoint.editDevice + \"/\" + id;\n  return fetch(url, {\n    method: 'PATCH',\n    headers: {\n      'Authorization': \"Bearer \".concat(token),\n      'Secret-Key': secretKey,\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(device)\n  }).then(function (response) {\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json();\n  }).catch(function (error) {\n    console.error('Error editing device:', error);\n    throw error;\n  });\n}\nexport { getDevices, createDevice, deleteDevice, editDevice };","map":{"version":3,"names":["HOST","RestApiClient","endpoint","device","deleteDevice","createDevice","editDevice","getDevices","token","secretKey","url","backend_devices","fetch","method","headers","then","response","ok","Error","json","data","console","log","catch","error","sessionStorage","getItem","concat","body","JSON","stringify","id"],"sources":["D:/MATERIALE AN 4 SEM 1/SD/proiect/ds2023_30642_fazakas_edina_assignment_1/react-demo/src/device/api/device-api.js"],"sourcesContent":["import { HOST } from '../../commons/hosts';\r\nimport RestApiClient from \"../../commons/api/rest-client\";\r\n\r\nconst endpoint = {\r\n    device: '/getDevices',\r\n    deleteDevice: '/deleteDevice',\r\n    createDevice: '/createDevice',\r\n    editDevice: '/updateDevice'\r\n};\r\n\r\nfunction getDevices(token, secretKey) {\r\n    const url = HOST.backend_devices + endpoint.device;\r\n\r\n    return fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': 'Bearer ' + token,\r\n            'Secret-Key': secretKey,\r\n        },\r\n    })\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            console.log('Data received:', data);\r\n            return data;\r\n        })\r\n        .catch(error => {\r\n            console.error('Error fetching devices:', error);\r\n            throw error;\r\n        });\r\n}\r\n\r\n\r\n\r\n    function createDevice(device, secretKey) {\r\n    const token = sessionStorage.getItem('token');\r\n    const url = HOST.backend_devices + endpoint.createDevice;\r\n\r\n    return fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Secret-Key': secretKey,\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(device),\r\n    })\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n\r\n            return response.json();\r\n        })\r\n        .catch(error => {\r\n            console.error('Error creating device:', error);\r\n            throw error;\r\n        });\r\n}\r\n\r\nfunction deleteDevice(id, secretKey) {\r\n    const token = sessionStorage.getItem('token');\r\n    const url = HOST.backend_devices + endpoint.deleteDevice + '/' + id;\r\n\r\n    return fetch(url, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Secret-Key': secretKey,\r\n        },\r\n    })\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n\r\n            return response.json();\r\n        })\r\n        .catch(error => {\r\n            console.error('Error deleting device:', error);\r\n            throw error;\r\n        });\r\n}\r\n\r\nfunction editDevice(id, device, secretKey) {\r\n    const token = sessionStorage.getItem('token');\r\n    const url = HOST.backend_devices + endpoint.editDevice + `/` + id;\r\n\r\n    return fetch(url, {\r\n        method: 'PATCH',\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Secret-Key': secretKey,\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(device),\r\n    })\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n\r\n            return response.json();\r\n        })\r\n        .catch(error => {\r\n            console.error('Error editing device:', error);\r\n            throw error;\r\n        });\r\n}\r\n\r\nexport {\r\n    getDevices,\r\n    createDevice,\r\n    deleteDevice,\r\n    editDevice\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}